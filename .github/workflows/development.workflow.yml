name: Development Workflow

on:
  push:
    branches:
      - 'main'

env:
  NODE_VERSION: 22.11.0
  TARGET_BRANCH: 'main'
  CI_COMMIT_AUTHOR: Continuous Integration
  CI_EMAIL_AUTHOR: pala.andri@gmail.com
  AWS_REGION: 'eu-west-1'
  ECR_REPOSITORY: 'images-repo'
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  lint-test:
    runs-on: ubuntu-latest
    permissions:
      contents: 'write'
      actions: 'read'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        run: corepack enable

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm i --frozen-lockfile --reporter=default

      - name: Check Test
        run: npm test

      - name: Build packages
        run: npm run build

  build-and-push-image:
    needs: lint-test
    if: ${{ success() }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm i --frozen-lockfile --reporter=default

      - name: Build packages
        run: npm run build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com

      - name: Build Docker image
        run: docker build -t ${{ env.ECR_REPOSITORY }}:latest .

      - name: Tag Docker image
        run: docker tag ${{ env.ECR_REPOSITORY }}:latest ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:latest

      - name: Push Docker image to ECR
        run: docker push ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:latest